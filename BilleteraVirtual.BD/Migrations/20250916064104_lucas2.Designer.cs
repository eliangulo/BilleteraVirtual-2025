// <auto-generated />
using System;
using BilleteraVirtual.BD.Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BilleteraVirtual.BD.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250916064104_lucas2")]
    partial class lucas2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BilleteraVirtual.BD.Datos.Entidades.Billetera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Billera_Admin")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Billeteras");
                });

            modelBuilder.Entity("BilleteraVirtual.BD.Datos.Entidades.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CuentaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontoDestino")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("MontoOrigen")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("TasaAcordada")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("idComprador")
                        .HasColumnType("int");

                    b.Property<int>("idMonedaDestino")
                        .HasColumnType("int");

                    b.Property<int>("idMonedaOrigen")
                        .HasColumnType("int");

                    b.Property<int>("idVendedor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CuentaID");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("BilleteraVirtual.BD.Datos.Entidades.Cuenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BilleteraId")
                        .HasColumnType("int");

                    b.Property<int>("MonedaId")
                        .HasColumnType("int");

                    b.Property<string>("Moneda_Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("BilleteraId");

                    b.HasIndex("MonedaId");

                    b.HasIndex(new[] { "Moneda_Tipo" }, "Cuenta_Moneda_Tipo_UQ")
                        .IsUnique();

                    b.ToTable("Cuentas");
                });

            modelBuilder.Entity("BilleteraVirtual.BD.Datos.Entidades.Deposito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CuentaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HabilitadO")
                        .HasColumnType("bit");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("CuentaId");

                    b.ToTable("Depositos");
                });

            modelBuilder.Entity("BilleteraVirtual.BD.Datos.Entidades.Extraccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CuentaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("CuentaID");

                    b.ToTable("Extracion");
                });

            modelBuilder.Entity("BilleteraVirtual.BD.Datos.Entidades.Moneda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CodISO")
                        .HasColumnType("int");

                    b.Property<bool>("Habilitada")
                        .HasColumnType("bit");

                    b.Property<string>("TipoMoneda")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CodISO" }, "Moneda_CodISO_UQ")
                        .IsUnique();

                    b.ToTable("Monedas");
                });

            modelBuilder.Entity("BilleteraVirtual.BD.Datos.Entidades.Transferencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Comision")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("CuentaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCuentaDestino")
                        .HasColumnType("int");

                    b.Property<int>("IdCuentaOrigen")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CuentaID");

                    b.ToTable("Transferencias");
                });

            modelBuilder.Entity("BilleteraVirtual.BD.Datos.Entidades.Usuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BilleteraId")
                        .HasColumnType("int");

                    b.Property<int>("CUIL")
                        .HasColumnType("int");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Domicilio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsAdmin")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BilleteraId");

                    b.HasIndex(new[] { "CUIL" }, "Usuarios_CUIL_UQ")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("BilleteraVirtual.BD.Datos.Entidades.Compra", b =>
                {
                    b.HasOne("BilleteraVirtual.BD.Datos.Entidades.Cuenta", "Cuenta")
                        .WithMany()
                        .HasForeignKey("CuentaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cuenta");
                });

            modelBuilder.Entity("BilleteraVirtual.BD.Datos.Entidades.Cuenta", b =>
                {
                    b.HasOne("BilleteraVirtual.BD.Datos.Entidades.Billetera", "Billetera")
                        .WithMany()
                        .HasForeignKey("BilleteraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BilleteraVirtual.BD.Datos.Entidades.Moneda", "Moneda")
                        .WithMany()
                        .HasForeignKey("MonedaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Billetera");

                    b.Navigation("Moneda");
                });

            modelBuilder.Entity("BilleteraVirtual.BD.Datos.Entidades.Deposito", b =>
                {
                    b.HasOne("BilleteraVirtual.BD.Datos.Entidades.Cuenta", "Cuenta")
                        .WithMany()
                        .HasForeignKey("CuentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cuenta");
                });

            modelBuilder.Entity("BilleteraVirtual.BD.Datos.Entidades.Extraccion", b =>
                {
                    b.HasOne("BilleteraVirtual.BD.Datos.Entidades.Cuenta", "Cuenta")
                        .WithMany()
                        .HasForeignKey("CuentaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cuenta");
                });

            modelBuilder.Entity("BilleteraVirtual.BD.Datos.Entidades.Transferencia", b =>
                {
                    b.HasOne("BilleteraVirtual.BD.Datos.Entidades.Cuenta", "Cuenta")
                        .WithMany()
                        .HasForeignKey("CuentaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cuenta");
                });

            modelBuilder.Entity("BilleteraVirtual.BD.Datos.Entidades.Usuarios", b =>
                {
                    b.HasOne("BilleteraVirtual.BD.Datos.Entidades.Billetera", "Billetera")
                        .WithMany()
                        .HasForeignKey("BilleteraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Billetera");
                });
#pragma warning restore 612, 618
        }
    }
}
